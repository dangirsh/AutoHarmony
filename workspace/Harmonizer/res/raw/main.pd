#N canvas 235 219 714 496 10;
#N canvas 484 225 585 446 envelope 0;
#X obj 147 281 vline~;
#X obj 217 323 *~;
#X obj 226 119 inlet;
#X text 210 101 time in ms;
#X obj 295 287 inlet~;
#X text 348 284 signal to envelope;
#X obj 218 355 outlet~;
#X obj 116 182 inlet;
#X text 100 165 bang tempo;
#X msg 272 186 addcomma;
#X msg 331 186 set 1 10;
#X msg 191 186 add 0 \$1 10;
#X msg 187 156 4;
#X obj 227 156 trigger f b b;
#X msg 147 249 1 10 \, 0 701 10 \;;
#X connect 0 0 1 0;
#X connect 1 0 6 0;
#X connect 2 0 13 0;
#X connect 4 0 1 1;
#X connect 7 0 14 0;
#X connect 9 0 14 0;
#X connect 10 0 14 0;
#X connect 11 0 14 0;
#X connect 12 0 11 0;
#X connect 13 0 11 0;
#X connect 13 1 9 0;
#X connect 13 2 10 0;
#X connect 14 0 0 0;
#X restore -54 30 pd envelope;
#X obj 150 369 dac~;
#X obj 194 73 s voice1;
#X obj 310 71 s voice2;
#X obj 55 142 r msecpbeat;
#X floatatom 195 32 5 0 0 0 - - -;
#X floatatom 310 35 5 0 0 0 - - -;
#X obj 58 75 s msecpbeat;
#X floatatom 58 27 5 0 0 0 - - -;
#X obj -90 213 s~ lead;
#X obj 2 199 s tick;
#X obj 2 172 metro 500;
#N canvas 0 22 450 300 voiceshift1 0;
#N canvas 111 82 869 577 pitchshift 0;
#X floatatom 29 99 0 0 0 0 - - -;
#X obj 92 368 *~;
#X obj 215 305 line~;
#X floatatom 247 122 0 0 0 0 - - -;
#X text 78 19 PITCH SHIFTER;
#X obj 215 279 pack 0 200;
#X obj 29 153 exp;
#X floatatom 29 179 6 0 0 0 - - -;
#X obj 29 269 /;
#X obj 156 199 * 0.001;
#X obj 324 375 line~;
#X obj 324 350 pack 0 200;
#X floatatom 324 299 0 0 0 0 - - -;
#X obj 324 273 r delay;
#X obj 92 394 +~;
#X obj 29 420 cos~;
#X obj 29 447 *~;
#X obj 29 476 +~;
#X obj 116 327 wrap~;
#X obj 261 370 *~;
#X obj 261 403 +~;
#X obj 198 430 cos~;
#X obj 198 457 *~;
#X obj 156 226 t b f;
#X floatatom 29 295 6 0 0 0 - - -;
#X obj 116 300 +~ 0.5;
#X obj 29 368 -~ 0.5;
#X obj 29 394 *~ 0.5;
#X obj 198 369 -~ 0.5;
#X obj 198 402 *~ 0.5;
#X obj 29 206 - 1;
#X obj 29 127 * 0.05776;
#X obj 29 232 * -1;
#X text 92 173 speed;
#X text 91 187 change;
#X text 291 121 <--window (msec);
#X text 64 262 tape head;
#X text 435 163 This is a classic rotating-tape-head style pitch shifter
using the vd~ variable delay object. Ther are two moving tape heads
\, each of which is loudest at the middle of its trajectory \, and
enveloped out at the moment it has to jump back (or forward) to start
another scratch. Most of the brain work is in computing how fast the
tape heads have to move to get the desired transposition.;
#X text 435 282 The "window size" is the total trajectory of the read
points in the delay line \, in milliseconds. The delay times are controlled
by a phasor~ object. The second delay time \, 180 degrees out of phase
from the first one \, is computed using the "wrap" object.;
#X text 433 372 The "window size" is the total trajectory of the read
points in the delay line \, in milliseconds. The delay times are controlled
by a phasor~ object. The second delay time \, 180 degrees out of phase
from the first one \, is computed using the "wrap" object.;
#X text 432 464 The cos~ objects compute the fadein and fadeout of
the two delay line outputs. They each traverse the positive half of
the cosine waveform (phase -0.25 to +0.25) over the time the phase
goes from one end to the other.;
#X obj 29 326 phasor~;
#X obj 324 326 max 1.5;
#X text 327 232 delay;
#X text 324 250 (msec);
#X obj 247 149 max 1;
#X text 65 275 rotation freq;
#X obj 92 420 vd~ G09-del;
#X obj 261 432 vd~ G09-del;
#X obj 274 52 delwrite~ G09-del 5000;
#X obj 274 24 inlet~;
#X obj 29 71 inlet;
#X text 66 70 (halftones to transpose);
#X obj 28 510 outlet~;
#X obj 324 273 r delay;
#X obj 250 92 r window;
#X connect 0 0 31 0;
#X connect 1 0 14 0;
#X connect 2 0 1 1;
#X connect 2 0 19 1;
#X connect 3 0 45 0;
#X connect 5 0 2 0;
#X connect 6 0 7 0;
#X connect 7 0 30 0;
#X connect 8 0 24 0;
#X connect 9 0 23 0;
#X connect 10 0 14 1;
#X connect 10 0 20 1;
#X connect 11 0 10 0;
#X connect 12 0 42 0;
#X connect 13 0 12 0;
#X connect 14 0 47 0;
#X connect 15 0 16 0;
#X connect 16 0 17 0;
#X connect 17 0 53 0;
#X connect 18 0 19 0;
#X connect 18 0 28 0;
#X connect 19 0 20 0;
#X connect 20 0 48 0;
#X connect 21 0 22 0;
#X connect 22 0 17 1;
#X connect 23 0 8 0;
#X connect 23 1 8 1;
#X connect 24 0 41 0;
#X connect 25 0 18 0;
#X connect 26 0 27 0;
#X connect 27 0 15 0;
#X connect 28 0 29 0;
#X connect 29 0 21 0;
#X connect 30 0 32 0;
#X connect 31 0 6 0;
#X connect 32 0 8 0;
#X connect 41 0 1 0;
#X connect 41 0 26 0;
#X connect 41 0 25 0;
#X connect 42 0 11 0;
#X connect 45 0 9 0;
#X connect 45 0 5 0;
#X connect 47 0 16 1;
#X connect 48 0 22 1;
#X connect 50 0 49 0;
#X connect 51 0 0 0;
#X connect 54 0 12 0;
#X connect 55 0 3 0;
#X restore 156 168 pd pitchshift;
#X obj 121 47 r voice1;
#X obj 191 47 r pitch;
#X floatatom 121 89 5 0 0 0 - - -;
#X floatatom 191 86 5 0 0 0 - - -;
#X obj 156 124 -;
#X obj 230 125 r~ lead;
#X obj 156 211 outlet~;
#X connect 0 0 7 0;
#X connect 1 0 3 0;
#X connect 2 0 4 0;
#X connect 3 0 5 0;
#X connect 4 0 5 1;
#X connect 5 0 0 0;
#X connect 6 0 0 1;
#X restore 154 141 pd voiceshift1;
#N canvas 0 22 450 300 voiceshift2 0;
#N canvas 111 82 869 577 pitchshift 0;
#X floatatom 29 99 0 0 0 0 - - -;
#X obj 92 368 *~;
#X obj 215 305 line~;
#X floatatom 247 122 0 0 0 0 - - -;
#X text 78 19 PITCH SHIFTER;
#X obj 215 279 pack 0 200;
#X obj 247 96 r window;
#X obj 29 153 exp;
#X floatatom 29 179 6 0 0 0 - - -;
#X obj 29 269 /;
#X obj 156 199 * 0.001;
#X obj 324 375 line~;
#X obj 324 350 pack 0 200;
#X floatatom 324 299 0 0 0 0 - - -;
#X obj 324 273 r delay;
#X obj 92 394 +~;
#X obj 29 420 cos~;
#X obj 29 447 *~;
#X obj 29 476 +~;
#X obj 116 327 wrap~;
#X obj 261 370 *~;
#X obj 261 403 +~;
#X obj 198 430 cos~;
#X obj 198 457 *~;
#X obj 502 40 loadbang;
#X obj 156 226 t b f;
#X floatatom 29 295 6 0 0 0 - - -;
#X obj 116 300 +~ 0.5;
#X obj 29 368 -~ 0.5;
#X obj 29 394 *~ 0.5;
#X obj 198 369 -~ 0.5;
#X obj 198 402 *~ 0.5;
#X obj 29 206 - 1;
#X obj 29 127 * 0.05776;
#X obj 29 232 * -1;
#X text 92 173 speed;
#X text 91 187 change;
#X text 291 121 <--window (msec);
#X text 64 262 tape head;
#X text 435 163 This is a classic rotating-tape-head style pitch shifter
using the vd~ variable delay object. Ther are two moving tape heads
\, each of which is loudest at the middle of its trajectory \, and
enveloped out at the moment it has to jump back (or forward) to start
another scratch. Most of the brain work is in computing how fast the
tape heads have to move to get the desired transposition.;
#X text 435 282 The "window size" is the total trajectory of the read
points in the delay line \, in milliseconds. The delay times are controlled
by a phasor~ object. The second delay time \, 180 degrees out of phase
from the first one \, is computed using the "wrap" object.;
#X text 433 372 The "window size" is the total trajectory of the read
points in the delay line \, in milliseconds. The delay times are controlled
by a phasor~ object. The second delay time \, 180 degrees out of phase
from the first one \, is computed using the "wrap" object.;
#X text 432 464 The cos~ objects compute the fadein and fadeout of
the two delay line outputs. They each traverse the positive half of
the cosine waveform (phase -0.25 to +0.25) over the time the phase
goes from one end to the other.;
#X obj 29 326 phasor~;
#X obj 324 326 max 1.5;
#X text 327 232 delay;
#X text 324 250 (msec);
#X obj 247 149 max 1;
#X text 65 275 rotation freq;
#X obj 261 432 vd~ G09-del;
#X obj 274 24 inlet~;
#X obj 29 71 inlet;
#X text 66 70 (halftones to transpose);
#X msg 502 66 \; window 100 \; delay 0;
#X obj 28 510 outlet~;
#X obj 92 420 vd~ G99-del;
#X obj 274 52 delwrite~ G99-del 5000;
#X connect 0 0 33 0;
#X connect 1 0 15 0;
#X connect 2 0 1 1;
#X connect 2 0 20 1;
#X connect 3 0 47 0;
#X connect 5 0 2 0;
#X connect 6 0 3 0;
#X connect 7 0 8 0;
#X connect 8 0 32 0;
#X connect 9 0 26 0;
#X connect 10 0 25 0;
#X connect 11 0 15 1;
#X connect 11 0 21 1;
#X connect 12 0 11 0;
#X connect 13 0 44 0;
#X connect 14 0 13 0;
#X connect 15 0 55 0;
#X connect 16 0 17 0;
#X connect 17 0 18 0;
#X connect 18 0 54 0;
#X connect 19 0 20 0;
#X connect 19 0 30 0;
#X connect 20 0 21 0;
#X connect 21 0 49 0;
#X connect 22 0 23 0;
#X connect 23 0 18 1;
#X connect 24 0 53 0;
#X connect 25 0 9 0;
#X connect 25 1 9 1;
#X connect 26 0 43 0;
#X connect 27 0 19 0;
#X connect 28 0 29 0;
#X connect 29 0 16 0;
#X connect 30 0 31 0;
#X connect 31 0 22 0;
#X connect 32 0 34 0;
#X connect 33 0 7 0;
#X connect 34 0 9 0;
#X connect 43 0 1 0;
#X connect 43 0 28 0;
#X connect 43 0 27 0;
#X connect 44 0 12 0;
#X connect 47 0 10 0;
#X connect 47 0 5 0;
#X connect 49 0 23 1;
#X connect 50 0 56 0;
#X connect 51 0 0 0;
#X connect 55 0 17 1;
#X restore 156 168 pd pitchshift;
#X obj 191 47 r pitch;
#X floatatom 122 87 5 0 0 0 - - -;
#X floatatom 191 86 5 0 0 0 - - -;
#X obj 156 124 -;
#X obj 230 125 r~ lead;
#X obj 156 211 outlet~;
#X obj 121 47 r voice2;
#X connect 0 0 6 0;
#X connect 1 0 3 0;
#X connect 2 0 4 0;
#X connect 3 0 4 1;
#X connect 4 0 0 0;
#X connect 5 0 0 1;
#X connect 7 0 2 0;
#X restore 176 163 pd voiceshift2;
#X obj 154 200 +~;
#N canvas 0 22 450 300 getpitch 0;
#X obj 139 145 int;
#X obj 139 116 r tick;
#X obj 139 174 s pitch;
#X obj 205 67 r~ lead;
#X obj 205 112 fiddle~ 1024;
#X obj 100 120 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X connect 0 0 2 0;
#X connect 1 0 0 0;
#X connect 3 0 4 0;
#X connect 4 0 0 1;
#X connect 5 0 0 0;
#X restore 290 140 pd getpitch;
#X obj -5 140 loadbang;
#N canvas 0 22 450 300 voiceshift3 0;
#N canvas 111 82 869 577 pitchshift 0;
#X floatatom 29 99 0 0 0 0 - - -;
#X obj 92 368 *~;
#X obj 215 305 line~;
#X floatatom 247 122 0 0 0 0 - - -;
#X text 78 19 PITCH SHIFTER;
#X obj 215 279 pack 0 200;
#X obj 247 96 r window;
#X obj 29 153 exp;
#X floatatom 29 179 6 0 0 0 - - -;
#X obj 29 269 /;
#X obj 156 199 * 0.001;
#X obj 324 375 line~;
#X obj 324 350 pack 0 200;
#X floatatom 324 299 0 0 0 0 - - -;
#X obj 324 273 r delay;
#X obj 92 394 +~;
#X obj 29 420 cos~;
#X obj 29 447 *~;
#X obj 29 476 +~;
#X obj 116 327 wrap~;
#X obj 261 370 *~;
#X obj 261 403 +~;
#X obj 198 430 cos~;
#X obj 198 457 *~;
#X obj 502 40 loadbang;
#X obj 156 226 t b f;
#X floatatom 29 295 6 0 0 0 - - -;
#X obj 116 300 +~ 0.5;
#X obj 29 368 -~ 0.5;
#X obj 29 394 *~ 0.5;
#X obj 198 369 -~ 0.5;
#X obj 198 402 *~ 0.5;
#X obj 29 206 - 1;
#X obj 29 127 * 0.05776;
#X obj 29 232 * -1;
#X text 92 173 speed;
#X text 91 187 change;
#X text 291 121 <--window (msec);
#X text 64 262 tape head;
#X text 435 163 This is a classic rotating-tape-head style pitch shifter
using the vd~ variable delay object. Ther are two moving tape heads
\, each of which is loudest at the middle of its trajectory \, and
enveloped out at the moment it has to jump back (or forward) to start
another scratch. Most of the brain work is in computing how fast the
tape heads have to move to get the desired transposition.;
#X text 435 282 The "window size" is the total trajectory of the read
points in the delay line \, in milliseconds. The delay times are controlled
by a phasor~ object. The second delay time \, 180 degrees out of phase
from the first one \, is computed using the "wrap" object.;
#X text 433 372 The "window size" is the total trajectory of the read
points in the delay line \, in milliseconds. The delay times are controlled
by a phasor~ object. The second delay time \, 180 degrees out of phase
from the first one \, is computed using the "wrap" object.;
#X text 432 464 The cos~ objects compute the fadein and fadeout of
the two delay line outputs. They each traverse the positive half of
the cosine waveform (phase -0.25 to +0.25) over the time the phase
goes from one end to the other.;
#X obj 29 326 phasor~;
#X obj 324 326 max 1.5;
#X text 327 232 delay;
#X text 324 250 (msec);
#X obj 247 149 max 1;
#X text 65 275 rotation freq;
#X obj 261 432 vd~ G09-del;
#X obj 274 24 inlet~;
#X obj 29 71 inlet;
#X text 66 70 (halftones to transpose);
#X msg 502 66 \; window 100 \; delay 0;
#X obj 28 510 outlet~;
#X obj 274 52 delwrite~ G19-del 5000;
#X obj 92 420 vd~ G19-del;
#X connect 0 0 33 0;
#X connect 1 0 15 0;
#X connect 2 0 1 1;
#X connect 2 0 20 1;
#X connect 3 0 47 0;
#X connect 5 0 2 0;
#X connect 6 0 3 0;
#X connect 7 0 8 0;
#X connect 8 0 32 0;
#X connect 9 0 26 0;
#X connect 10 0 25 0;
#X connect 11 0 15 1;
#X connect 11 0 21 1;
#X connect 12 0 11 0;
#X connect 13 0 44 0;
#X connect 14 0 13 0;
#X connect 15 0 56 0;
#X connect 16 0 17 0;
#X connect 17 0 18 0;
#X connect 18 0 54 0;
#X connect 19 0 20 0;
#X connect 19 0 30 0;
#X connect 20 0 21 0;
#X connect 21 0 49 0;
#X connect 22 0 23 0;
#X connect 23 0 18 1;
#X connect 24 0 53 0;
#X connect 25 0 9 0;
#X connect 25 1 9 1;
#X connect 26 0 43 0;
#X connect 27 0 19 0;
#X connect 28 0 29 0;
#X connect 29 0 16 0;
#X connect 30 0 31 0;
#X connect 31 0 22 0;
#X connect 32 0 34 0;
#X connect 33 0 7 0;
#X connect 34 0 9 0;
#X connect 43 0 1 0;
#X connect 43 0 28 0;
#X connect 43 0 27 0;
#X connect 44 0 12 0;
#X connect 47 0 10 0;
#X connect 47 0 5 0;
#X connect 49 0 23 1;
#X connect 50 0 55 0;
#X connect 51 0 0 0;
#X connect 56 0 17 1;
#X restore 156 167 pd pitchshift;
#X obj 191 47 r pitch;
#X floatatom 122 87 5 0 0 0 - - -;
#X floatatom 191 86 5 0 0 0 - - -;
#X obj 156 124 -;
#X obj 230 125 r~ lead;
#X obj 156 211 outlet~;
#X obj 121 47 r voice3;
#X connect 0 0 6 0;
#X connect 1 0 3 0;
#X connect 2 0 4 0;
#X connect 3 0 4 1;
#X connect 4 0 0 0;
#X connect 5 0 0 1;
#X connect 7 0 2 0;
#X restore 194 183 pd voiceshift3;
#X floatatom 419 33 5 0 0 0 - - -;
#X obj 419 69 s voice3;
#N canvas 36 80 595 650 filter 0;
#N canvas 121 99 628 555 noisegate 0;
#X obj 6 -274 env~ 16384;
#X obj -41 101 *~;
#X msg 8 -41 \$1 \$2;
#X obj 7 -108 t a b;
#X msg 53 19 0 \$1;
#X obj 10 61 line~;
#X obj 28 -211 r npthreshold;
#X obj 58 -167 r npattack;
#X obj 98 -87 r nphold;
#X obj 86 -27 r npdecay;
#X obj -53 -354 inlet~;
#X obj -41 129 outlet~;
#X obj 7 -188 > 30;
#X obj 53 -66 delay 10;
#X obj -30 -239 print;
#X obj 7 -145 pack f 50;
#X obj 53 -3 int 50;
#X obj 250 -238 s npthreshold;
#X floatatom 250 -264 5 0 0 0 - - -;
#X floatatom 248 -197 5 0 0 0 - - -;
#X floatatom 250 -127 5 0 0 0 - - -;
#X floatatom 249 -51 5 0 0 0 - - -;
#X obj 248 -169 s npattack;
#X obj 250 -99 s nphold;
#X obj 249 -23 s npdecay;
#X connect 0 0 12 0;
#X connect 0 0 14 0;
#X connect 1 0 11 0;
#X connect 2 0 5 0;
#X connect 3 0 2 0;
#X connect 3 1 13 0;
#X connect 4 0 5 0;
#X connect 5 0 1 1;
#X connect 6 0 12 1;
#X connect 7 0 15 1;
#X connect 8 0 13 1;
#X connect 9 0 16 1;
#X connect 10 0 0 0;
#X connect 10 0 1 0;
#X connect 12 0 15 0;
#X connect 13 0 16 0;
#X connect 15 0 3 0;
#X connect 16 0 4 0;
#X connect 18 0 17 0;
#X connect 19 0 22 0;
#X connect 20 0 23 0;
#X connect 21 0 24 0;
#X restore 374 117 pd noisegate;
#X obj 56 460 outlet~;
#X obj 60 52 inlet~;
#X obj 363 206 bp~ 2000 4;
#X obj 56 85 *~;
#X obj 56 122 lop~ 10;
#X obj 91 285 expr~ $v1>$v2 \; if($v1>$v2 \, $v3 \, $v4);
#X floatatom 335 274 5 0 0 0 - - -;
#X obj 335 300 s threshold;
#X obj 134 60 r threshold;
#X obj 132 137 dbtopow~;
#X floatatom 334 337 5 0 0 0 - - -;
#X obj 334 363 s attackcoef;
#X obj 175 196 r attackcoef;
#X floatatom 329 396 5 0 0 0 - - -;
#X obj 215 253 r releasecoef;
#X obj 329 422 s releasecoef;
#X connect 2 0 4 0;
#X connect 2 0 4 1;
#X connect 4 0 5 0;
#X connect 5 0 6 0;
#X connect 7 0 8 0;
#X connect 9 0 10 0;
#X connect 10 0 6 1;
#X connect 11 0 12 0;
#X connect 13 0 6 2;
#X connect 14 0 16 0;
#X connect 15 0 6 3;
#X restore -149 177 pd filter;
#N canvas 56 41 450 300 reverb 1;
#N canvas 41 101 958 610 reverb 0;
#X obj 13 19 inlet~;
#X obj 13 43 reverb-echo echo-del1 5.43216;
#X obj 277 215 +~;
#X obj 319 215 +~;
#X obj 67 276 outlet~;
#X obj 137 276 outlet~;
#X obj 238 334 +~;
#X obj 347 335 +~;
#X obj 280 334 -~;
#X obj 387 334 -~;
#X obj 237 390 +~;
#X obj 281 391 +~;
#X obj 325 392 -~;
#X obj 364 392 -~;
#X obj 324 474 *~ 0;
#X obj 282 473 *~ 0;
#X obj 237 472 *~ 0;
#X obj 365 475 *~ 0;
#X obj 632 365 inlet;
#X obj 632 437 / 200;
#X obj 632 389 min 100;
#X obj 632 412 max 0;
#X obj 238 583 delwrite~ loop-del1 60;
#X obj 283 561 delwrite~ loop-del2 71.9345;
#X obj 364 515 delwrite~ loop-del4 95.945;
#X obj 298 154 delread~ loop-del1 60;
#X obj 340 179 delread~ loop-del2 71.9345;
#X obj 408 233 delread~ loop-del4 95.945;
#X obj 386 208 delread~ loop-del3 86.7545;
#X obj 325 538 delwrite~ loop-del3 86.7545;
#X obj 13 67 reverb-echo echo-del2 8.45346;
#X obj 13 91 reverb-echo echo-del3 13.4367;
#X obj 13 115 reverb-echo echo-del4 21.5463;
#X obj 13 139 reverb-echo echo-del5 34.3876;
#X obj 13 163 reverb-echo echo-del6 55.5437;
#X text 286 42 "early echo" generators \, which also increase echo
density. Open one to see what they do.;
#X text 300 115 Get the outputs of the recirculating delays. Add the
inputs to two of them.;
#X text 420 313 Do a power-conserving mix of them in pairs. First combine
(1 \, 2) and (3 \, 4)...;
#X text 402 385 ...then (1 \, 3) and (2 \, 4);
#X text 446 469 The two mixing stages have a combined gain of 2 \,
so the recirculation gain is limited to 0.5.;
#X text 586 542 Put the signals back into the;
#X text 584 557 recirculating delays.;
#X text 29 296 Tap outputs from here.;
#X text 708 381 0 to 100 to control reverb;
#X text 719 396 time.;
#X text 691 364 feedback gain on a scale of;
#X connect 0 0 1 0;
#X connect 1 0 30 0;
#X connect 1 1 30 1;
#X connect 2 0 4 0;
#X connect 2 0 6 0;
#X connect 2 0 8 0;
#X connect 3 0 5 0;
#X connect 3 0 6 1;
#X connect 3 0 8 1;
#X connect 6 0 10 0;
#X connect 6 0 12 0;
#X connect 7 0 12 1;
#X connect 7 0 10 1;
#X connect 8 0 11 0;
#X connect 8 0 13 0;
#X connect 9 0 11 1;
#X connect 9 0 13 1;
#X connect 10 0 16 0;
#X connect 11 0 15 0;
#X connect 12 0 14 0;
#X connect 13 0 17 0;
#X connect 14 0 29 0;
#X connect 15 0 23 0;
#X connect 16 0 22 0;
#X connect 17 0 24 0;
#X connect 18 0 20 0;
#X connect 19 0 17 1;
#X connect 19 0 16 1;
#X connect 19 0 15 1;
#X connect 19 0 14 1;
#X connect 20 0 21 0;
#X connect 21 0 19 0;
#X connect 25 0 2 1;
#X connect 26 0 3 1;
#X connect 27 0 7 1;
#X connect 27 0 9 1;
#X connect 28 0 7 0;
#X connect 28 0 9 0;
#X connect 30 0 31 0;
#X connect 30 1 31 1;
#X connect 31 0 32 0;
#X connect 31 1 32 1;
#X connect 32 0 33 0;
#X connect 32 1 33 1;
#X connect 33 0 34 0;
#X connect 33 1 34 1;
#X connect 34 0 2 0;
#X connect 34 1 3 0;
#X restore 215 119 pd reverb;
#X floatatom 291 95 0 0 100 0 - - -;
#X obj 182 173 outlet~;
#X obj 249 183 outlet~;
#X obj 295 58 r reverb;
#X obj 65 54 s reverb;
#X floatatom 62 19 5 0 0 0 - - -;
#X obj 191 66 inlet~;
#X connect 0 0 2 0;
#X connect 0 1 3 0;
#X connect 1 0 0 1;
#X connect 4 0 1 0;
#X connect 6 0 5 0;
#X connect 7 0 0 0;
#X connect 7 0 2 0;
#X restore 153 262 pd reverb;
#X obj -89 149 adc~ 1;
#X connect 4 0 11 1;
#X connect 5 0 2 0;
#X connect 6 0 3 0;
#X connect 8 0 7 0;
#X connect 11 0 10 0;
#X connect 12 0 14 0;
#X connect 13 0 14 1;
#X connect 14 0 21 0;
#X connect 16 0 11 0;
#X connect 17 0 14 1;
#X connect 18 0 19 0;
#X connect 21 0 1 0;
#X connect 21 1 1 1;
#X connect 22 0 9 0;
